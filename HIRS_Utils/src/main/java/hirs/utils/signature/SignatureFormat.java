package hirs.utils.signature;

import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.security.cert.CertificateEncodingException;
import java.security.cert.X509Certificate;

/**
 * Interface defined for generic signature processing.
 */
public interface SignatureFormat {

    /**
     * Creates a signature structure to be signed by a cryptographic engine.
     * @param algId IANA registered COSE Algorithm String
     * @param kid Key Identifier
     * @param payload  data to be placed in the payload
     * @param signingCert signing cert to embed (if embedded parameter is set to true)
     * @param useUnprotectedKid if supported and true kid will be placed in an unprotected header
     * @param embedded if true embed a signing certificate
     * @param rimType RIM type used to match a CoAP content-type
     * @return byte array holding the to be signed data
     */
    byte[] createToBeSigned(int algId, byte[] kid, byte[] payload, X509Certificate signingCert,
                                   boolean useUnprotectedKid, boolean embedded, String rimType)
            throws IOException, CertificateEncodingException, NoSuchAlgorithmException;

    /**
     * Adds a signature of the toBeSignedData to the Signature structure generated by a Cryptographic engine.
     * @param signature byte array holding signature data
     */
    void addSignature(byte[] signature)  throws IOException;
    /**
     * Gets the signed data after the signature has been added.
     * @return  byte array holding the signature structure with the payload
     */
    byte[] getSignedData() throws IOException;

}
