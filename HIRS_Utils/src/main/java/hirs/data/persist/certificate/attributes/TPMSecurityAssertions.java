package hirs.data.persist.certificate.attributes;

import javax.persistence.Column;
import javax.persistence.Embeddable;
import java.math.BigInteger;

/**
 * A class to represent the TPM Security Assertions in an Endorsement Credential as
 * defined by the TCG spec for TPM 1.2.
 *
 * https://www.trustedcomputinggroup.org/wp-content/uploads/IWG-Credential_Profiles_V1_R0.pdf
 *
 * Future iterations of this code may want to reference
 * www.trustedcomputinggroup.org/wp-content/uploads/Credential_Profile_EK_V2.0_R14_published.pdf
 * for specifications for TPM 2.0 (pg. 19).
 */
@Embeddable
public class TPMSecurityAssertions {

    /**
     * A type to handle the different endorsement key generation types used in the TPM
     * Assertions field of an endorsement credential. Ordering of enum types is intentional
     * and their ordinal values correspond to enum values in the TCG spec.
     */

    public enum EkGenerationType {
        /**
         * Generated internally within the TPM and cannot be revoked. Enum value of 0.
         */
        INTERNAL,
        /**
         * Generated externally and then inserted under a controlled environment during
         * manufacturing. Cannot be revoked. Enum value of 1.
         */
        INJECTED,
        /**
         * Generated internally within the TPM and can be revoked. Enum value of 2.
         */
        INTERNAL_REVOCABLE,
        /**
         * Generated externally and then inserted under a controlled environment during
         * manufacturing. Can be revoked. Enum value of 3.
         */
        INJECTED_REVOCABLE;
    }

    /**
     * A type to handle the different endorsement key generation locations used in
     * specifying the endorsement key generation location and the endorsement key
     * certificate generation location in the TPM Assertions field of an endorsement
     * credential. Ordering of enum types is intentional and their ordinal values
     * correspond to enum values in the TCG spec.
     */
    public enum EkGenerationLocation {
        /**
         * Generated by the TPM Manufacturer. Enum value of 0.
         */
        TPM_MANUFACTURER,
        /**
         * Generated by the Platform Manufacturer. Enum value of 1.
         */
        PLATFORM_MANUFACTURER,
        /**
         * Generated by the endorsement key certificate signer. Enum value of 2.
         */
        EK_CERT_SIGNER;
    }

    @Column
    private BigInteger tpmSecAssertsVersion; //default v1

    @Column
    private boolean fieldUpgradeable; //default false

    @Column(nullable = true)
    private EkGenerationType ekGenType; //optional

    @Column(nullable = true)
    private EkGenerationLocation ekGenerationLocation; //optional

    @Column(nullable = true)
    private EkGenerationLocation ekCertificateGenerationLocation; //optional

    // Future work (may need to create other classes):
    //private CommonCriteriaMeasures commCritMeasures; //optional
    //private FIPSLevel fipsLevel; //optional
    //private boolean iso9000Certified; //default false
    //private IA5String iso9000Uri; //optional

    /**
     * Standard constructor that sets required fields. Use accessor methods
     * to set optional fields.
     * @param version the version of the security assertions
     * @param fieldUpgradeable whether or not the security assertions are
     *                         field upgradeable.
     */
    public TPMSecurityAssertions(final BigInteger version, final boolean fieldUpgradeable) {
        this.tpmSecAssertsVersion = version;
        this.fieldUpgradeable = fieldUpgradeable;
    }

    /**
     * Default Constructor for Hibernate.
     */
    protected TPMSecurityAssertions() {

    }

    /**
     * Gets the Version of this TPM Security Assertions.
     * @return the version of this TPM security assertions.
     */
    public BigInteger getVersion() {
        return tpmSecAssertsVersion;
    }

    /**
     * Gets whether or not the TPM security assertions are field upgradeable.
     * @return whether or not the TPM security assertions are field upgradeable.
     */
    public boolean isFieldUpgradeable() {
        return fieldUpgradeable;
    }

    /**
     * Get the optional endorsement key generation type of the TPM security assertions.
     * @return the optional endorsement key generation type of the TPM security assertions.
     */
    public EkGenerationType getEkGenType() {
        return ekGenType;
    }

    /**
     * Sets the optional field of the endorsement key generation type of the TPM
     * security assertions.
     * @param ekGenType the endorsement key generation type of the TPM security assertions.
     */
    public void setEkGenType(final EkGenerationType ekGenType) {
        this.ekGenType = ekGenType;
    }

    /**
     * Gets the optional endorsement key generation location of the TPM security assertions.
     * @return the optional endorsement key generation location of the TPM security assertions.
     */
    public EkGenerationLocation getEkGenLoc() {
        return ekGenerationLocation;
    }

    /**
     * Sets the optional endorsement key generation location of the TPM security assertions.
     * @param ekGenLoc the optional endorsement key generation location of the TPM security
     *                 assertions.
     */
    public void setEkGenLoc(final EkGenerationLocation ekGenLoc) {
        this.ekGenerationLocation = ekGenLoc;
    }

    /**
     * Gets the optional endorsement key certificate generation location of the TPM
     * security assertions.
     * @return the optional endorsement key certificate generation location of the TPM
     *         security assertions.
     */
    public EkGenerationLocation getEkCertGenLoc() {
        return ekCertificateGenerationLocation;
    }

    /**
     * Sets the optional endorsement key certificate generation location of the TPM
     * security assertions.
     * @param ekCertGenLoc the optional endorsement key certificate generation location
     *                     of the TPM security assertions.
     */
    public void setEkCertGenLoc(final EkGenerationLocation ekCertGenLoc) {
        this.ekCertificateGenerationLocation = ekCertGenLoc;
    }

    @Override
    public String toString() {
        return "TPMSecurityAssertions{"
                + "version=" + tpmSecAssertsVersion
                + ", fieldUpgradeable=" + fieldUpgradeable
                + ", ekGenType=" + ekGenType
                + ", ekGenLoc=" + ekGenerationLocation
                + ", ekCertGenLoc=" + ekCertificateGenerationLocation
                + '}';
    }
}
